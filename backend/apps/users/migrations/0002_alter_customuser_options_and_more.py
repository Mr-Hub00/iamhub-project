# Generated by Django 4.2 on 2025-08-02 16:42

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='customuser',
            options={'ordering': ['-reputation_score', '-last_active']},
        ),
        migrations.AddField(
            model_name='customuser',
            name='availability_status',
            field=models.CharField(choices=[('available', 'Available'), ('busy', 'Busy'), ('focused', 'Focused'), ('away', 'Away')], default='available', max_length=20),
        ),
        migrations.AddField(
            model_name='customuser',
            name='avatar_url',
            field=models.URLField(blank=True, help_text='Profile picture URL or IPFS hash'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='bio',
            field=models.TextField(blank=True, help_text='Detailed biography and background', max_length=1000),
        ),
        migrations.AddField(
            model_name='customuser',
            name='certifications',
            field=models.TextField(blank=True, help_text='Professional certifications and achievements'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='collaboration_preferences',
            field=models.CharField(blank=True, help_text='Preferred collaboration types', max_length=300),
        ),
        migrations.AddField(
            model_name='customuser',
            name='community_rank',
            field=models.IntegerField(default=1, help_text='Community ranking (1-100)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='customuser',
            name='dao_participation',
            field=models.BooleanField(default=False, help_text='Active in DAO governance'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='email_notifications',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='experience_level',
            field=models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert'), ('master', 'Master')], default='beginner', max_length=20),
        ),
        migrations.AddField(
            model_name='customuser',
            name='interests',
            field=models.CharField(blank=True, help_text='Areas of interest (comma-separated)', max_length=500),
        ),
        migrations.AddField(
            model_name='customuser',
            name='join_date',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='customuser',
            name='last_active',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='location',
            field=models.CharField(blank=True, help_text='Geographic location', max_length=100),
        ),
        migrations.AddField(
            model_name='customuser',
            name='nft_count',
            field=models.IntegerField(default=0, help_text='Number of NFTs owned/created'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='personality_traits',
            field=models.CharField(blank=True, help_text='Additional personality traits (comma-separated)', max_length=300),
        ),
        migrations.AddField(
            model_name='customuser',
            name='primary_personality',
            field=models.CharField(blank=True, choices=[('innovator', 'Innovator'), ('collaborator', 'Collaborator'), ('mentor', 'Mentor'), ('explorer', 'Explorer'), ('peacemaker', 'Peacemaker'), ('visionary', 'Visionary'), ('technologist', 'Technologist'), ('artist', 'Artist')], help_text='Primary personality type', max_length=20),
        ),
        migrations.AddField(
            model_name='customuser',
            name='profile_visibility',
            field=models.CharField(choices=[('public', 'Public'), ('community', 'Community Only'), ('private', 'Private')], default='community', max_length=20),
        ),
        migrations.AddField(
            model_name='customuser',
            name='purpose_statement',
            field=models.TextField(blank=True, help_text='Your core mission and purpose in the community', max_length=500),
        ),
        migrations.AddField(
            model_name='customuser',
            name='purpose_tags',
            field=models.CharField(blank=True, help_text='Comma-separated tags (e.g., peace, innovation, art)', max_length=300),
        ),
        migrations.AddField(
            model_name='customuser',
            name='reputation_score',
            field=models.IntegerField(default=0, help_text='Community reputation points'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='skills_json',
            field=models.TextField(blank=True, help_text='JSON object storing skill ratings'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='token_balance',
            field=models.DecimalField(decimal_places=8, default=0, help_text='PeaceToken balance', max_digits=20),
        ),
        migrations.AddField(
            model_name='customuser',
            name='web3_notifications',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='website',
            field=models.URLField(blank=True, help_text='Personal website or portfolio'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='role',
            field=models.CharField(choices=[('champion', 'Champion'), ('elder', 'Elder'), ('creator', 'Creator'), ('builder', 'Builder'), ('guardian', 'Guardian'), ('seeker', 'Seeker'), ('admin', 'Admin')], default='seeker', max_length=20),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='wallet_address',
            field=models.CharField(blank=True, help_text='Ethereum wallet address for Web3 interactions', max_length=255, null=True),
        ),
    ]
